from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder


# –ò–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ —Å –≤—ã–±–æ—Ä–æ–º —è–∑—ã–∫–∞
def get_lang_settings_kb(i18n: dict, locales: list[str], checked: str) -> InlineKeyboardMarkup:
    buttons = []
    for locale in sorted(locales):
        if locale == "default":
            continue
        if locale == checked:
            buttons.append(
                [
                    InlineKeyboardButton(
                        text=f"üîò {i18n.get(locale)}", callback_data=locale
                    )
                ]
            )
        else:
            buttons.append(
                [
                    InlineKeyboardButton(
                        text=f"‚ö™Ô∏è {i18n.get(locale)}", callback_data=locale
                    )
                ]
            )

    buttons.append(
        [
            InlineKeyboardButton(
                text=i18n.get("cancel_lang_button_text"),
                callback_data="cancel_lang_button_data"
            ),
            InlineKeyboardButton(
                text=i18n.get("save_lang_button_text"),
                callback_data="save_lang_button_data"
            ),
        ]
    )

    return InlineKeyboardMarkup(inline_keyboard=buttons)


# –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤
def create_keyboard_categories(categories: list):
    buttons = [InlineKeyboardButton(text=category.name, callback_data=f"category_{category.id}")
               for category in categories]
    keyboard_lst = [buttons[i:i+2] for i in range(0, len(buttons), 2)]
    inline_keyboard_category = InlineKeyboardMarkup(inline_keyboard=keyboard_lst)
    return inline_keyboard_category


# —Ñ—É–Ω–∫—Ü–∏—è, –≥–µ–Ω–µ—Ä–∏—Ä—É—é—â–∞—è –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤
async def create_keyboard_bottom(i18n: dict, text: str):
    inline_keyboard_bottom = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=i18n.get('prev'), callback_data='prev'),
             InlineKeyboardButton(text=i18n.get('next'), callback_data='next')],
            [InlineKeyboardButton(text=text, callback_data='add_to_cart')],
            [InlineKeyboardButton(text=i18n.get('back'), callback_data='back_to_categories')],
        ]
    )
    return inline_keyboard_bottom


async def create_keyboard_cart(i18n: dict) -> InlineKeyboardMarkup:
    """# –§—É–Ω–∫—Ü–∏—è, –≥–µ–Ω–µ—Ä–∏—Ä—É—é—â–∞—è –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã"""
    inline_keyboard_cart = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=i18n.get('edit_order'), callback_data='edit_order'),
            InlineKeyboardButton(text=i18n.get('place_an_order'), callback_data='place_an_order')],
        ]
    )
    return inline_keyboard_cart


async def create_keyboard_edit_cart(i18n: dict, products: list[dict]) -> InlineKeyboardMarkup:
    """–§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã"""
    kb_builder = InlineKeyboardBuilder()
    for product in products:
        kb_builder.row(
            InlineKeyboardButton(
                text=f"{product.get('name')} - {product.get('qnty')} {i18n.get("edit_cart_button")}",
                callback_data=f"{product.get('id')}_del"
            )
        )

    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—Ü –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    kb_builder.row(
        InlineKeyboardButton(text=i18n.get('back'), callback_data='back_to_cart')
    )

    return kb_builder.as_markup()


def create_keyboard_confirm(i18n: dict):
    # –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    buttons = [
        [InlineKeyboardButton(text=i18n.get('correct'), callback_data='correct'),
         InlineKeyboardButton(text=i18n.get('confirm'), callback_data='confirm')
         ],
        [InlineKeyboardButton(text=i18n.get('back'), callback_data='back_from_confirm')]
    ]
    inline_keyboard_confirm = InlineKeyboardMarkup(inline_keyboard=buttons)
    return inline_keyboard_confirm


def create_keyboard_broadcast():
    buttons = [
        [InlineKeyboardButton(text='–°–æ–æ–±—â–µ–Ω–∏–µ', callback_data='message'),
         InlineKeyboardButton(text='–§–æ—Ç–æ', callback_data='photo')
         ],
        [InlineKeyboardButton(text='–í–∏–¥–µ–æ', callback_data='video'),
         InlineKeyboardButton(text='–î–æ–∫—É–º–µ–Ω—Ç', callback_data='document')
         ],
        [InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='cancel_broadcast')]
    ]
    inline_keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return inline_keyboard


def create_keyboard_affirm_broadcast():
    buttons = [
        [InlineKeyboardButton(text='–†–∞–∑–æ—Å–ª–∞—Ç—å', callback_data='broadcast_send')],
        [InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='broadcast_send_cancel')]
    ]
    inline_keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return inline_keyboard


def create_keyboard_broadcast_caption():
    buttons = [
        [InlineKeyboardButton(text='–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è', callback_data='no_caption'),
         ]
    ]
    inline_keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return inline_keyboard


def create_keyboard_back_to_broadcast():
    buttons = [
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back_to_broadcast'),
         ]
    ]
    inline_keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return inline_keyboard